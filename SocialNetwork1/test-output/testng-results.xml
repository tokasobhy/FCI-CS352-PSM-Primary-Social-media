<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="3" total="9" passed="6">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="257" started-at="2015-05-13T01:18:04Z" finished-at="2015-05-13T01:18:05Z">
    <groups>
      <group name="post">
        <method signature="posttest.getHashTag()[pri:0, instance:com.FCI.SWE.Post.posttest@2ee5e48a]" name="getHashTag" class="com.FCI.SWE.Post.posttest"/>
        <method signature="posttest.getMembersShares()[pri:0, instance:com.FCI.SWE.Post.posttest@2ee5e48a]" name="getMembersShares" class="com.FCI.SWE.Post.posttest"/>
        <method signature="posttest.getMembersToShow()[pri:0, instance:com.FCI.SWE.Post.posttest@2ee5e48a]" name="getMembersToShow" class="com.FCI.SWE.Post.posttest"/>
        <method signature="posttest.getMyPost()[pri:0, instance:com.FCI.SWE.Post.posttest@2ee5e48a]" name="getMyPost" class="com.FCI.SWE.Post.posttest"/>
        <method signature="posttest.getNumOfLikes()[pri:0, instance:com.FCI.SWE.Post.posttest@2ee5e48a]" name="getNumOfLikes" class="com.FCI.SWE.Post.posttest"/>
        <method signature="posttest.getPostContent()[pri:0, instance:com.FCI.SWE.Post.posttest@2ee5e48a]" name="getPostContent" class="com.FCI.SWE.Post.posttest"/>
        <method signature="posttest.getPostOwner()[pri:0, instance:com.FCI.SWE.Post.posttest@2ee5e48a]" name="getPostOwner" class="com.FCI.SWE.Post.posttest"/>
        <method signature="posttest.getPrivacy()[pri:0, instance:com.FCI.SWE.Post.posttest@2ee5e48a]" name="getPrivacy" class="com.FCI.SWE.Post.posttest"/>
        <method signature="posttest.getpostType()[pri:0, instance:com.FCI.SWE.Post.posttest@2ee5e48a]" name="getpostType" class="com.FCI.SWE.Post.posttest"/>
      </group> <!-- post -->
    </groups>
    <test name="Default test" duration-ms="257" started-at="2015-05-13T01:18:04Z" finished-at="2015-05-13T01:18:05Z">
      <class name="com.FCI.SWE.Post.posttest">
        <test-method status="PASS" signature="getHashTag()[pri:0, instance:com.FCI.SWE.Post.posttest@2ee5e48a]" name="getHashTag" duration-ms="96" started-at="2015-05-13T04:18:04Z" finished-at="2015-05-13T04:18:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getHashTag -->
        <test-method status="PASS" signature="getMembersShares()[pri:0, instance:com.FCI.SWE.Post.posttest@2ee5e48a]" name="getMembersShares" duration-ms="2" started-at="2015-05-13T04:18:05Z" finished-at="2015-05-13T04:18:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getMembersShares -->
        <test-method status="PASS" signature="getMembersToShow()[pri:0, instance:com.FCI.SWE.Post.posttest@2ee5e48a]" name="getMembersToShow" duration-ms="1" started-at="2015-05-13T04:18:05Z" finished-at="2015-05-13T04:18:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getMembersToShow -->
        <test-method status="PASS" signature="getMyPost()[pri:0, instance:com.FCI.SWE.Post.posttest@2ee5e48a]" name="getMyPost" duration-ms="2" started-at="2015-05-13T04:18:05Z" finished-at="2015-05-13T04:18:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getMyPost -->
        <test-method status="PASS" signature="getNumOfLikes()[pri:0, instance:com.FCI.SWE.Post.posttest@2ee5e48a]" name="getNumOfLikes" duration-ms="1" started-at="2015-05-13T04:18:05Z" finished-at="2015-05-13T04:18:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getNumOfLikes -->
        <test-method status="FAIL" signature="getPostContent()[pri:0, instance:com.FCI.SWE.Post.posttest@2ee5e48a]" name="getPostContent" duration-ms="3" started-at="2015-05-13T04:18:05Z" finished-at="2015-05-13T04:18:05Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [oitjvoisjo] but found [ oitjvoisjo]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [oitjvoisjo] but found [ oitjvoisjo]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:494)
	at org.testng.Assert.assertEquals(Assert.java:123)
	at org.testng.Assert.assertEquals(Assert.java:176)
	at org.testng.Assert.assertEquals(Assert.java:186)
	at com.FCI.SWE.Post.posttest.getPostContent(posttest.java:41)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:111)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:204)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:175)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getPostContent -->
        <test-method status="PASS" signature="getPostOwner()[pri:0, instance:com.FCI.SWE.Post.posttest@2ee5e48a]" name="getPostOwner" duration-ms="2" started-at="2015-05-13T04:18:05Z" finished-at="2015-05-13T04:18:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getPostOwner -->
        <test-method status="FAIL" signature="getPrivacy()[pri:0, instance:com.FCI.SWE.Post.posttest@2ee5e48a]" name="getPrivacy" duration-ms="2" started-at="2015-05-13T04:18:05Z" finished-at="2015-05-13T04:18:05Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [publicPost] but found [CustomPost]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [publicPost] but found [CustomPost]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:494)
	at org.testng.Assert.assertEquals(Assert.java:123)
	at org.testng.Assert.assertEquals(Assert.java:176)
	at org.testng.Assert.assertEquals(Assert.java:186)
	at com.FCI.SWE.Post.posttest.getPrivacy(posttest.java:56)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:111)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:204)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:175)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getPrivacy -->
        <test-method status="FAIL" signature="getpostType()[pri:0, instance:com.FCI.SWE.Post.posttest@2ee5e48a]" name="getpostType" duration-ms="2" started-at="2015-05-13T04:18:05Z" finished-at="2015-05-13T04:18:05Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [null] but found [pagePost]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [null] but found [pagePost]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:494)
	at org.testng.Assert.assertEquals(Assert.java:123)
	at org.testng.Assert.assertEquals(Assert.java:176)
	at org.testng.Assert.assertEquals(Assert.java:186)
	at com.FCI.SWE.Post.posttest.getpostType(posttest.java:62)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:111)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:204)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:175)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getpostType -->
      </class> <!-- com.FCI.SWE.Post.posttest -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
